"""init db

Revision ID: f06dcd57a55c
Revises: None
Create Date: 2018-01-13 18:15:34.450188

"""

# revision identifiers, used by Alembic.
revision = 'f06dcd57a55c'
down_revision = None

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('license',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('web', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('web', sa.String(length=1024), nullable=True),
    sa.Column('country', sa.String(length=28), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(max_length=128), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=120), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('middle_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('organization', sa.String(length=128), nullable=True),
    sa.Column('github', sa.String(length=128), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('followers', sa.Integer(), nullable=False),
    sa.Column('following', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('static_roles', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('comment',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('target_id', sa.String(length=128), nullable=False),
    sa.Column('target_type', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oauth2_client',
    sa.Column('client_id', sa.String(length=40), nullable=False),
    sa.Column('client_secret', sa.String(length=55), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_type', sa.Enum('public', 'confidential', name='clienttypes'), nullable=False),
    sa.Column('redirect_uris', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.Column('default_scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('client_id')
    )
    op.create_index(op.f('ix_oauth2_client_user_id'), 'oauth2_client', ['user_id'], unique=False)
    op.create_table('publisher',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('department', sa.String(length=128), nullable=True),
    sa.Column('web', sa.String(length=1024), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('story',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('web', sa.String(length=1024), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('keywords', sa.String(length=1024), nullable=True),
    sa.Column('issued_time', sa.DateTime(), nullable=True),
    sa.Column('contributor_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contributor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('user_followers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('issued_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'follower_id')
    )
    op.create_table('academic_story',
    sa.Column('story_id', sa.String(length=128), nullable=False),
    sa.Column('paper_name', sa.String(length=512), nullable=False),
    sa.Column('paper_link', sa.String(length=1024), nullable=True),
    sa.Column('paper_authors', sa.String(length=256), nullable=True),
    sa.Column('code_repo', sa.String(length=1024), nullable=True),
    sa.Column('paper_org', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.PrimaryKeyConstraint('story_id'),
    sa.UniqueConstraint('paper_name'),
    sa.UniqueConstraint('story_id')
    )
    op.create_table('dataset',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('homepage', sa.String(length=1024), nullable=False),
    sa.Column('version', sa.String(length=24), nullable=True),
    sa.Column('keywords', sa.String(length=128), nullable=False),
    sa.Column('image', sa.String(length=1024), nullable=True),
    sa.Column('temporal', sa.String(length=64), nullable=True),
    sa.Column('spatial', sa.String(length=64), nullable=True),
    sa.Column('access_level', sa.String(length=32), nullable=False),
    sa.Column('copyrights', sa.String(length=256), nullable=True),
    sa.Column('accrual_periodicity', sa.String(length=32), nullable=True),
    sa.Column('specification', sa.Text(), nullable=True),
    sa.Column('data_quality', sa.Boolean(), nullable=False),
    sa.Column('data_dictionary', sa.String(length=1024), nullable=True),
    sa.Column('category', sa.String(length=128), nullable=False),
    sa.Column('issued_time', sa.String(length=64), nullable=True),
    sa.Column('language', sa.String(length=64), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('publisher_id', sa.String(length=128), nullable=True),
    sa.Column('contributor_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['contributor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['license_id'], ['license.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('news_story',
    sa.Column('story_id', sa.String(length=128), nullable=False),
    sa.Column('title', sa.String(length=1024), nullable=False),
    sa.Column('people', sa.String(length=1024), nullable=True),
    sa.Column('date', sa.String(length=1024), nullable=True),
    sa.Column('location', sa.String(length=128), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.PrimaryKeyConstraint('story_id'),
    sa.UniqueConstraint('story_id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('oauth2_grant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(length=40), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=False),
    sa.Column('redirect_uri', sa.String(length=255), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth2_client.client_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth2_grant_client_id'), 'oauth2_grant', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_grant_code'), 'oauth2_grant', ['code'], unique=False)
    op.create_index(op.f('ix_oauth2_grant_user_id'), 'oauth2_grant', ['user_id'], unique=False)
    op.create_table('oauth2_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(length=40), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_type', sa.Enum('Bearer', name='tokentypes'), nullable=False),
    sa.Column('access_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('scopes', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth2_client.client_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token'),
    sa.UniqueConstraint('refresh_token')
    )
    op.create_index(op.f('ix_oauth2_token_client_id'), 'oauth2_token', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_token_user_id'), 'oauth2_token', ['user_id'], unique=False)
    op.create_table('user_star_story',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('story_id', sa.String(length=128), nullable=False),
    sa.Column('stared_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'story_id')
    )
    op.create_table('dataset_story',
    sa.Column('dataset_id', sa.String(length=128), nullable=False),
    sa.Column('story_id', sa.String(length=128), nullable=False),
    sa.Column('linked_time', sa.DateTime(), nullable=True),
    sa.Column('linker_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['linker_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'story_id', 'linker_id')
    )
    op.create_table('reference',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('dataset_id', sa.String(length=128), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('reference', sa.String(length=1024), nullable=False),
    sa.Column('snapshot', sa.String(length=512), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('source',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('dataset_id', sa.String(length=128), nullable=True),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('access_url', sa.String(length=1024), nullable=False),
    sa.Column('download_url', sa.String(length=1024), nullable=False),
    sa.Column('snapshot', sa.String(length=512), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('format', sa.String(length=64), nullable=False),
    sa.Column('media_type', sa.String(length=64), nullable=False),
    sa.Column('schema', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('user_star_dataset',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.String(length=128), nullable=False),
    sa.Column('stared_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'dataset_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_star_dataset')
    op.drop_table('source')
    op.drop_table('reference')
    op.drop_table('dataset_story')
    op.drop_table('user_star_story')
    op.drop_index(op.f('ix_oauth2_token_user_id'), table_name='oauth2_token')
    op.drop_index(op.f('ix_oauth2_token_client_id'), table_name='oauth2_token')
    op.drop_table('oauth2_token')
    op.drop_index(op.f('ix_oauth2_grant_user_id'), table_name='oauth2_grant')
    op.drop_index(op.f('ix_oauth2_grant_code'), table_name='oauth2_grant')
    op.drop_index(op.f('ix_oauth2_grant_client_id'), table_name='oauth2_grant')
    op.drop_table('oauth2_grant')
    op.drop_table('news_story')
    op.drop_table('dataset')
    op.drop_table('academic_story')
    op.drop_table('user_followers')
    op.drop_table('story')
    op.drop_table('publisher')
    op.drop_index(op.f('ix_oauth2_client_user_id'), table_name='oauth2_client')
    op.drop_table('oauth2_client')
    op.drop_table('comment')
    op.drop_table('user')
    op.drop_table('organization')
    op.drop_table('license')
    # ### end Alembic commands ###
